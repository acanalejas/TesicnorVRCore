//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Packages/com.tesicnor.tesicnorvrcore/Runtime/TesicnorVRCORE/Pseudo-Core/Input/CoreInteraction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @CoreInteraction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @CoreInteraction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""CoreInteraction"",
    ""maps"": [
        {
            ""name"": ""Interaction"",
            ""id"": ""24ff6d40-a346-4b75-9ff3-df082840cdac"",
            ""actions"": [
                {
                    ""name"": ""Grab_Left"",
                    ""type"": ""Button"",
                    ""id"": ""f246f46c-cb80-4ef2-a396-35795815145c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grab_Right"",
                    ""type"": ""Button"",
                    ""id"": ""845913c1-c63c-46ba-90f2-8b22d39241f7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""cfa24ac9-b490-4f36-a8c6-0869689322f7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightJoystick"",
                    ""type"": ""Value"",
                    ""id"": ""8384a273-c615-4e3d-829b-8714ad606bac"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftJoystick"",
                    ""type"": ""Value"",
                    ""id"": ""d252f713-801e-4d67-8f87-9915a09777c8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightJoystickButton"",
                    ""type"": ""Button"",
                    ""id"": ""e545c850-55d6-4a0d-b290-2d843e0e1cc9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftJoystickButton"",
                    ""type"": ""Button"",
                    ""id"": ""d743c5d2-0d57-4c67-a0c6-594102588fd5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click_right"",
                    ""type"": ""Button"",
                    ""id"": ""c0a252ca-3133-42ec-a326-274cc1ac207f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click_Left"",
                    ""type"": ""Button"",
                    ""id"": ""fa93b8e7-4ddf-4c9b-bc8f-b54b9355943c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3e377fab-815d-4e00-9849-dd7609b53f4f"",
                    ""path"": ""<XRController>{LeftHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c12c74f6-c33a-42a0-a5ec-5bb19c549b7c"",
                    ""path"": ""<XRController>{LeftHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e86fe2fb-d7b1-4c6d-9d7a-b8e0ef1a77d8"",
                    ""path"": ""<XRController>{RightHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de76f258-5719-47a1-be3b-60382dbb2c10"",
                    ""path"": ""<XRController>{RightHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a378f69-15f6-48b6-af30-251f2a5b9b9f"",
                    ""path"": ""<XRController>{LeftHand}/{MenuButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4069697c-239a-4ead-a892-043c4f7bc120"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fcc1f95-ba20-4bc9-bf38-1ededad1934e"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f1fa45a-c780-4cff-bd0d-e4198699b625"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightJoystickButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6c454d2-98c2-4951-86a9-f7e5cec8e8b3"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftJoystickButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afbbb403-c72e-4bcf-aee2-a9f12b899be0"",
                    ""path"": ""<XRController>{LeftHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13c95334-5b07-4aed-aa98-748b0664dc1a"",
                    ""path"": ""<XRController>{RightHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click_right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Interaction
        m_Interaction = asset.FindActionMap("Interaction", throwIfNotFound: true);
        m_Interaction_Grab_Left = m_Interaction.FindAction("Grab_Left", throwIfNotFound: true);
        m_Interaction_Grab_Right = m_Interaction.FindAction("Grab_Right", throwIfNotFound: true);
        m_Interaction_Pause = m_Interaction.FindAction("Pause", throwIfNotFound: true);
        m_Interaction_RightJoystick = m_Interaction.FindAction("RightJoystick", throwIfNotFound: true);
        m_Interaction_LeftJoystick = m_Interaction.FindAction("LeftJoystick", throwIfNotFound: true);
        m_Interaction_RightJoystickButton = m_Interaction.FindAction("RightJoystickButton", throwIfNotFound: true);
        m_Interaction_LeftJoystickButton = m_Interaction.FindAction("LeftJoystickButton", throwIfNotFound: true);
        m_Interaction_Click_right = m_Interaction.FindAction("Click_right", throwIfNotFound: true);
        m_Interaction_Click_Left = m_Interaction.FindAction("Click_Left", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Interaction
    private readonly InputActionMap m_Interaction;
    private List<IInteractionActions> m_InteractionActionsCallbackInterfaces = new List<IInteractionActions>();
    private readonly InputAction m_Interaction_Grab_Left;
    private readonly InputAction m_Interaction_Grab_Right;
    private readonly InputAction m_Interaction_Pause;
    private readonly InputAction m_Interaction_RightJoystick;
    private readonly InputAction m_Interaction_LeftJoystick;
    private readonly InputAction m_Interaction_RightJoystickButton;
    private readonly InputAction m_Interaction_LeftJoystickButton;
    private readonly InputAction m_Interaction_Click_right;
    private readonly InputAction m_Interaction_Click_Left;
    public struct InteractionActions
    {
        private @CoreInteraction m_Wrapper;
        public InteractionActions(@CoreInteraction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Grab_Left => m_Wrapper.m_Interaction_Grab_Left;
        public InputAction @Grab_Right => m_Wrapper.m_Interaction_Grab_Right;
        public InputAction @Pause => m_Wrapper.m_Interaction_Pause;
        public InputAction @RightJoystick => m_Wrapper.m_Interaction_RightJoystick;
        public InputAction @LeftJoystick => m_Wrapper.m_Interaction_LeftJoystick;
        public InputAction @RightJoystickButton => m_Wrapper.m_Interaction_RightJoystickButton;
        public InputAction @LeftJoystickButton => m_Wrapper.m_Interaction_LeftJoystickButton;
        public InputAction @Click_right => m_Wrapper.m_Interaction_Click_right;
        public InputAction @Click_Left => m_Wrapper.m_Interaction_Click_Left;
        public InputActionMap Get() { return m_Wrapper.m_Interaction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InteractionActions set) { return set.Get(); }
        public void AddCallbacks(IInteractionActions instance)
        {
            if (instance == null || m_Wrapper.m_InteractionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InteractionActionsCallbackInterfaces.Add(instance);
            @Grab_Left.started += instance.OnGrab_Left;
            @Grab_Left.performed += instance.OnGrab_Left;
            @Grab_Left.canceled += instance.OnGrab_Left;
            @Grab_Right.started += instance.OnGrab_Right;
            @Grab_Right.performed += instance.OnGrab_Right;
            @Grab_Right.canceled += instance.OnGrab_Right;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @RightJoystick.started += instance.OnRightJoystick;
            @RightJoystick.performed += instance.OnRightJoystick;
            @RightJoystick.canceled += instance.OnRightJoystick;
            @LeftJoystick.started += instance.OnLeftJoystick;
            @LeftJoystick.performed += instance.OnLeftJoystick;
            @LeftJoystick.canceled += instance.OnLeftJoystick;
            @RightJoystickButton.started += instance.OnRightJoystickButton;
            @RightJoystickButton.performed += instance.OnRightJoystickButton;
            @RightJoystickButton.canceled += instance.OnRightJoystickButton;
            @LeftJoystickButton.started += instance.OnLeftJoystickButton;
            @LeftJoystickButton.performed += instance.OnLeftJoystickButton;
            @LeftJoystickButton.canceled += instance.OnLeftJoystickButton;
            @Click_right.started += instance.OnClick_right;
            @Click_right.performed += instance.OnClick_right;
            @Click_right.canceled += instance.OnClick_right;
            @Click_Left.started += instance.OnClick_Left;
            @Click_Left.performed += instance.OnClick_Left;
            @Click_Left.canceled += instance.OnClick_Left;
        }

        private void UnregisterCallbacks(IInteractionActions instance)
        {
            @Grab_Left.started -= instance.OnGrab_Left;
            @Grab_Left.performed -= instance.OnGrab_Left;
            @Grab_Left.canceled -= instance.OnGrab_Left;
            @Grab_Right.started -= instance.OnGrab_Right;
            @Grab_Right.performed -= instance.OnGrab_Right;
            @Grab_Right.canceled -= instance.OnGrab_Right;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @RightJoystick.started -= instance.OnRightJoystick;
            @RightJoystick.performed -= instance.OnRightJoystick;
            @RightJoystick.canceled -= instance.OnRightJoystick;
            @LeftJoystick.started -= instance.OnLeftJoystick;
            @LeftJoystick.performed -= instance.OnLeftJoystick;
            @LeftJoystick.canceled -= instance.OnLeftJoystick;
            @RightJoystickButton.started -= instance.OnRightJoystickButton;
            @RightJoystickButton.performed -= instance.OnRightJoystickButton;
            @RightJoystickButton.canceled -= instance.OnRightJoystickButton;
            @LeftJoystickButton.started -= instance.OnLeftJoystickButton;
            @LeftJoystickButton.performed -= instance.OnLeftJoystickButton;
            @LeftJoystickButton.canceled -= instance.OnLeftJoystickButton;
            @Click_right.started -= instance.OnClick_right;
            @Click_right.performed -= instance.OnClick_right;
            @Click_right.canceled -= instance.OnClick_right;
            @Click_Left.started -= instance.OnClick_Left;
            @Click_Left.performed -= instance.OnClick_Left;
            @Click_Left.canceled -= instance.OnClick_Left;
        }

        public void RemoveCallbacks(IInteractionActions instance)
        {
            if (m_Wrapper.m_InteractionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInteractionActions instance)
        {
            foreach (var item in m_Wrapper.m_InteractionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InteractionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InteractionActions @Interaction => new InteractionActions(this);
    public interface IInteractionActions
    {
        void OnGrab_Left(InputAction.CallbackContext context);
        void OnGrab_Right(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnRightJoystick(InputAction.CallbackContext context);
        void OnLeftJoystick(InputAction.CallbackContext context);
        void OnRightJoystickButton(InputAction.CallbackContext context);
        void OnLeftJoystickButton(InputAction.CallbackContext context);
        void OnClick_right(InputAction.CallbackContext context);
        void OnClick_Left(InputAction.CallbackContext context);
    }
}
